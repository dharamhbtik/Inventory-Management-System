@page "/inventoryreport"
@attribute [Authorize]
@inject ISearchInventoryTransactionsUseCase SearchInventoriesUseCase
@inject IJSRuntime JSRunTime
<h3>Inventory Transactions</h3>
<br />
<div class="row">
    <div class="col">
        <label for="inv">Inventory Name</label>
        <input type="text" id="inv" class="form-control" @bind-value="inventoryName" />
    </div>
    <div class="col">
        <label for="df">Date From</label>
        <input type="date" id="df" class="form-control" @bind-value="dateFrom" />
    </div>
    <div class="col">
        <label for="dt">Date To</label>
        <input type="date" id="dt" class="form-control" @bind-value="dateTo" />
    </div>
    <div class="col">
        <label for="at">Activity Type</label>
        <select id="at" class="form-control" @bind="activityTypeId">
             <option value="0">--Select Activity--</option>
            <option value="1">Purchase Inventory</option>
            <option value="2">Purchase Product</option>
        </select>
    </div>
    <div class="col">
        <label for="dt">&nbsp;</label>
        <input type="button" value="Search" @onclick="SearchInventories" class="btn btn-primary form-control" />
    </div>
     <div class="col">
        <label for="dt">&nbsp;</label>
        <input type="button" value="Print" @onclick="PrintReport" class="btn btn-primary form-control" />
    </div>
</div>
@if (transactionData != null)
{
    <div id="printarea">
    <table class="table">
        <thead>
            <tr>
                <th>Date </th>
                <th>Inventory </th>
                <th>Activity </th>
                <th>Qty Before </th>
                <th>Qty After </th>
                <th>PO#</th>
                <th>Production#</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in transactionData)
            {
                <tr>
                    <td>
                        @item.TransactionDate.ToString("MMM dd yyyy")
                    </td>
                    <td>
                        @item.Inventory.InventoryName
                    </td>
                    <td>
                        @if (item.ActivityType == InventoryTransactionType.ProduceProduct)
                        {
                            <text>Produce</text>
                        }
                        else if (item.ActivityType == InventoryTransactionType.PurchaseInventory)
                        {
                            <text>Purchase</text>
                        }

                    </td>
                    <td>
                        @item.QuanittyBefore.ToString()
                    </td>
                    <td>
                        @item.QuantityAfter.ToString()
                    </td>
                    <td>
                        @item.PONumber
                    </td>
                    <td>
                        @item.ProductionNumber
                    </td>

                </tr>
            }
        </tbody>
    </table>
    </div>
}
<div>
</div>
@code {
    private string? inventoryName;
    private DateTime? dateFrom;
    private DateTime? dateTo;
    private InventoryTransactionType? transactionType;
    private int activityTypeId;
    private IEnumerable<InventoryTransaction> transactionData;
    private async void SearchInventories()
    {
        if (activityTypeId == 0)
            transactionType = null;
        else
        {
            transactionType = (InventoryTransactionType)activityTypeId;
        }
        transactionData = await SearchInventoriesUseCase.ExecuteAsync(inventoryName, dateFrom, dateTo, transactionType);

    }
     private void PrintReport()
    {
        JSRunTime.InvokeVoidAsync("print");
    }
}
