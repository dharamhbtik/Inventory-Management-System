@page "/addinventory"
@attribute [Authorize]
@inject NavigationManager NavManager
@inject IAddInventoryUseCase AddInventoryCase
<h3>Add Inventory</h3>
@if (inventory != null)
{
    <EditForm Model="inventory" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>
        <div class="form-group">
            <label for="name">Inventory Name</label>
            <InputText id="name" @bind-Value="inventory.InventoryName" class="form-control"></InputText>
        </div>
        <div class="form-group">
            <label for="qty">Quantity</label>
            <InputNumber id="qty" @bind-Value="inventory.Quantity" class="form-control"></InputNumber>
        </div>
        <div class="form-group">
            <label for="price">Price</label>
            <InputNumber id="price" @bind-Value="inventory.Price" class="form-control"></InputNumber>
        </div>
        <button type="submit" class="btn btn-primary">Save</button>
    </EditForm>
}

@code {
    private Inventory? inventory;
    protected override void OnInitialized()
    {
        base.OnInitialized();
        inventory = new Inventory();
    }

    private async void OnValidSubmit()
    {
        if (inventory != null)
        {
            await AddInventoryCase.ExecuteAsync(inventory);
            NavManager.NavigateTo("/inventories");
        }
    }

}

